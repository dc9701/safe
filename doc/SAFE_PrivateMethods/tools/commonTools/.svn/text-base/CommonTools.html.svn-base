<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_33) on Fri Oct 17 12:17:38 PDT 2014 -->
<TITLE>
CommonTools
</TITLE>

<META NAME="date" CONTENT="2014-10-17">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="CommonTools";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/CommonTools.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../tools/commonTools/ProxyTools.html" title="class in tools.commonTools"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?tools/commonTools/CommonTools.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="CommonTools.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
tools.commonTools</FONT>
<BR>
Class CommonTools</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../resources/inherit.gif" ALT="extended by "><B>tools.commonTools.CommonTools</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>CommonTools</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;com.fasterxml.jackson.databind.ObjectMapper</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#jsonMapper">jsonMapper</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#CommonTools()">CommonTools</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#configProxySettings()">configProxySettings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check the proxy settings in initialConfig file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#configProxySettings(newfwk.base.core.TestClass)">configProxySettings</A></B>(<A HREF="../../newfwk/base/core/TestClass.html" title="class in newfwk.base.core">TestClass</A>&nbsp;testClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getConfigValue(com.fasterxml.jackson.databind.JsonNode, java.lang.String)">getConfigValue</A></B>(com.fasterxml.jackson.databind.JsonNode&nbsp;configObject,
               java.lang.String&nbsp;propertyName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the value of a config parameter either from a JsonNode object or a system environment variable (if specified).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getCurrentTime()">getCurrentTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the current time.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;com.fasterxml.jackson.databind.JsonNode</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getDataFromConfigFile(java.lang.String)">getDataFromConfigFile</A></B>(java.lang.String&nbsp;configFileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get data from a json or properties config file and return a JsonNode
 Object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;com.fasterxml.jackson.databind.JsonNode</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getDataFromConfigFile(java.lang.String, java.lang.String)">getDataFromConfigFile</A></B>(java.lang.String&nbsp;configFileName,
                      java.lang.String&nbsp;testClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get data from a json or properties config file and return a JsonNode
 Object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getDate()">getDate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the current Date.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;com.fasterxml.jackson.databind.JsonNode</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getInitialConfig()">getInitialConfig</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get contents of initialConfig file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;com.fasterxml.jackson.databind.JsonNode</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getInitialConfig(java.lang.String)">getInitialConfig</A></B>(java.lang.String&nbsp;initialConfigFileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#getTestRoot()">getTestRoot</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get full path of the test ROOT.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../tools/commonTools/CommonTools.html#replaceIllegalFileName(java.lang.String, java.lang.String)">replaceIllegalFileName</A></B>(java.lang.String&nbsp;fileName,
                       java.lang.String&nbsp;newChar)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replace the illegal characters in file name.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="jsonMapper"><!-- --></A><H3>
jsonMapper</H3>
<PRE>
private static com.fasterxml.jackson.databind.ObjectMapper <B>jsonMapper</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="CommonTools()"><!-- --></A><H3>
CommonTools</H3>
<PRE>
public <B>CommonTools</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getConfigValue(com.fasterxml.jackson.databind.JsonNode, java.lang.String)"><!-- --></A><H3>
getConfigValue</H3>
<PRE>
public static java.lang.String <B>getConfigValue</B>(com.fasterxml.jackson.databind.JsonNode&nbsp;configObject,
                                              java.lang.String&nbsp;propertyName)</PRE>
<DL>
<DD>Get the value of a config parameter either from a JsonNode object or a system environment variable (if specified).
 
 Environment variables, and JsonNode object properties can contain tags (delimited by "{{" and "}}") which will be 
 replaced with the current value of the variable of the same name.  Config jsonNode objects are searched in the 
 following order for the specified variable(s):  1. testData, 2. sut, 3. initialConfig.  For example:
 
 disney.app.url = {{application.url}}/{{application.locale}}/#papdetails/12.2/1.0.0/1/
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configObject</CODE> - - The JsonNode config object containing the requested parameter.
<DT><B>Returns:</B><DD>- prop containing the contents of the config file.</DL>
</DD>
</DL>
<HR>

<A NAME="getDataFromConfigFile(java.lang.String, java.lang.String)"><!-- --></A><H3>
getDataFromConfigFile</H3>
<PRE>
public static com.fasterxml.jackson.databind.JsonNode <B>getDataFromConfigFile</B>(java.lang.String&nbsp;configFileName,
                                                                            java.lang.String&nbsp;testClass)</PRE>
<DL>
<DD>Get data from a json or properties config file and return a JsonNode
 Object.
 
 If the config file is not a json file it is parsed as a Properties file, and the JsonNode will be a flat
 representation of the properties file; otherwise, it will represent the contents of the json file.
 
 Both json and properties files can contain tags (delimited by "{{" and "}}") which will be replaced with the
 current value of the variable of the same name.  Config jsonNode objects are searched in the following order
 for the specified variable(s):  1. testData, 2. sut, 3. initialConfig.  For example:
 
 disney.app.url = {{application.url}}{{application.locale}}#papdetails/12.2/1.0.0/1/
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configFile</CODE> - - The config file; is recognized as Properties by the file
            extention (*.properties), not by content.<DD><CODE>testClass</CODE> - - The java class of the current test so we know how to traverse the folder hierarchy.
                 May be blank if an absolute path was specified or we just want to look in resources/data.
<DT><B>Returns:</B><DD>- prop containing the contents of the config file.</DL>
</DD>
</DL>
<HR>

<A NAME="getDataFromConfigFile(java.lang.String)"><!-- --></A><H3>
getDataFromConfigFile</H3>
<PRE>
public static com.fasterxml.jackson.databind.JsonNode <B>getDataFromConfigFile</B>(java.lang.String&nbsp;configFileName)</PRE>
<DL>
<DD>Get data from a json or properties config file and return a JsonNode
 Object.
 
 If the config file is not a json file it is parsed as a Properties file, and the JsonNode will be a flat
 representation of the properties file; otherwise, it will represent the contents of the json file.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>configFile</CODE> - - The config file; is recognized as Properties by the file
            extention (*.properties), not by content.
<DT><B>Returns:</B><DD>- prop containing the contents of the config file.</DL>
</DD>
</DL>
<HR>

<A NAME="getCurrentTime()"><!-- --></A><H3>
getCurrentTime</H3>
<PRE>
public static java.lang.String <B>getCurrentTime</B>()</PRE>
<DL>
<DD>Get the current time.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>- String indicates the current time with format "HH:mm:ss.SSS".</DL>
</DD>
</DL>
<HR>

<A NAME="getDate()"><!-- --></A><H3>
getDate</H3>
<PRE>
public static java.lang.String <B>getDate</B>()</PRE>
<DL>
<DD>Get the current Date.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>- String indicates the current Date with format "yyyy-MM-dd".</DL>
</DD>
</DL>
<HR>

<A NAME="getTestRoot()"><!-- --></A><H3>
getTestRoot</H3>
<PRE>
public static java.lang.String <B>getTestRoot</B>()</PRE>
<DL>
<DD>Get full path of the test ROOT.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>- full path of the test ROOT.</DL>
</DD>
</DL>
<HR>

<A NAME="getInitialConfig()"><!-- --></A><H3>
getInitialConfig</H3>
<PRE>
public static com.fasterxml.jackson.databind.JsonNode <B>getInitialConfig</B>()</PRE>
<DL>
<DD>Get contents of initialConfig file.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>- Properties object includes all contents of the initialConfig file.</DL>
</DD>
</DL>
<HR>

<A NAME="getInitialConfig(java.lang.String)"><!-- --></A><H3>
getInitialConfig</H3>
<PRE>
public static com.fasterxml.jackson.databind.JsonNode <B>getInitialConfig</B>(java.lang.String&nbsp;initialConfigFileName)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="configProxySettings()"><!-- --></A><H3>
configProxySettings</H3>
<PRE>
public static void <B>configProxySettings</B>()</PRE>
<DL>
<DD>Check the proxy settings in initialConfig file.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="configProxySettings(newfwk.base.core.TestClass)"><!-- --></A><H3>
configProxySettings</H3>
<PRE>
public static void <B>configProxySettings</B>(<A HREF="../../newfwk/base/core/TestClass.html" title="class in newfwk.base.core">TestClass</A>&nbsp;testClass)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="replaceIllegalFileName(java.lang.String, java.lang.String)"><!-- --></A><H3>
replaceIllegalFileName</H3>
<PRE>
public static java.lang.String <B>replaceIllegalFileName</B>(java.lang.String&nbsp;fileName,
                                                      java.lang.String&nbsp;newChar)</PRE>
<DL>
<DD>Replace the illegal characters in file name.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - The file name.<DD><CODE>newChar</CODE> - The replace char.
<DT><B>Returns:</B><DD>- the new filename without illegal character.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/CommonTools.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../tools/commonTools/ProxyTools.html" title="class in tools.commonTools"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?tools/commonTools/CommonTools.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="CommonTools.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
